$PBExportHeader$f_state_trans_set_mode.srf
global type f_state_trans_set_mode from function_object
end type

forward prototypes
global subroutine f_state_trans_set_mode (window a_window, datawindow a_datawindow, integer ai_mode, ref str_state a_state)
end prototypes

global subroutine f_state_trans_set_mode (window a_window, datawindow a_datawindow, integer ai_mode, ref str_state a_state);long ll_i, ll_i2
commandbutton lcb_tmp
userobject luo_tmp
tab ltab_tmp
datawindow ldw_tmp
if ai_mode = g_constants.state_0view then
	a_datawindow.dynamic event ue_make_0view()
end if
a_state.previous = a_state.current
a_state.current = ai_mode

if upperbound(a_window.control) > 0 then
	for ll_i = 1 to upperbound(a_window.control)
		choose case TypeOf(a_window.control[ll_i])
			case tab!
				ltab_tmp = a_window.control[ll_i]
				for ll_i2 = 1 to upperbound(ltab_tmp.control)
					f_state_trans_browse_userobject(a_datawindow, ltab_tmp.control[ll_i2], ai_mode)
				next 
			case datawindow!
				ldw_tmp = a_window.control[ll_i]
				if ldw_tmp.tag = "on_in_view_mode" then
					ldw_tmp.enabled = (ai_mode = g_constants.state_view or ai_mode = g_constants.state_0view)
				end if
				if (not isnull(ldw_tmp.tag)) and pos(ldw_tmp.tag, "on_in_edit_mode") > 0 then
					ldw_tmp.enabled = (ai_mode = g_constants.state_modify)
				end if
			case commandbutton!
				lcb_tmp = a_window.control[ll_i]
				if TypeOf(a_window.control[ll_i]) = CommandButton! then
					lcb_tmp = a_window.control[ll_i]
					if lcb_tmp.tag = "on_in_view_mode" then
						lcb_tmp.enabled = (ai_mode = g_constants.state_view or ai_mode = g_constants.state_0view)
					end if
					if lcb_tmp.tag = "on_in_edit_mode" then
						lcb_tmp.enabled = (ai_mode = g_constants.state_modify)
					end if
					if trim(mid(lcb_tmp.text, 2, len(lcb_tmp.text))) = "Delete" then
						if ai_mode = g_constants.state_0view then
							lcb_tmp.enabled = false
						end if
					end if					
					if trim(mid(lcb_tmp.text, 2, len(lcb_tmp.text))) = "Modify" then
						if ai_mode = g_constants.state_0view then
							lcb_tmp.enabled = false
						end if
					end if
					if trim(mid(lcb_tmp.text, 2, len(lcb_tmp.text))) = "Add" then
						if ai_mode = g_constants.state_view and (not isnull(a_datawindow.tag)) and pos(a_datawindow.tag, "one_record") > 0 then
							lcb_tmp.enabled = false
						end if
					end if										
				end if
		end choose
	next			
end if	


end subroutine

